# -----------------------------------------------
# Headless Service for StatefulSet (stable identity)
# -----------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: postgres-hl
  namespace: default
  labels:
    app: postgres
spec:
  clusterIP: None                 # Headless service
  selector:
    app: postgres
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
---
# -----------------------------------------------
# PostgreSQL StatefulSet
# -----------------------------------------------
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: default
  labels:
    app: postgres
spec:
  serviceName: postgres-hl        # Bind to the Headless Service above
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      # Avoid local storage permission issues (common with local-path scenarios)
      securityContext:
        runAsUser: 999            # UID of the postgres user
        runAsGroup: 999
        fsGroup: 999              # Make the mounted volume writable by the postgres group
      containers:
        - name: postgres
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: "promotions"        # Database name (aligned with the service resource name)
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
          # Readiness and liveness probes (using pg_isready)
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres", "-d", "promotions"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 6
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres", "-d", "promotions"]
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 6
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: pgdata
      spec:
        accessModes: ["ReadWriteOnce"]
        # Leave empty to use the default StorageClass (K3D/K3S is usually local-path)
        # If you need to specify one explicitly, uncomment and set your StorageClass name:
        # storageClassName: local-path
        resources:
          requests:
            storage: 1Gi
